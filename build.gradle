import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

//======================================================================
// PROJECT
//======================================================================

version = '1.0-SNAPSHOT'
group = 'com.sony.ebs.octopus3'

//======================================================================
// REPOSITORIES
//======================================================================

buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://mvn.sony-europe.com/content/groups/global' }
        mavenCentral()
        maven { url "http://oss.jfrog.org/repo" }
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:0.9.7-SNAPSHOT"
        classpath "org.gradle.api.plugins:gradle-nexus-plugin:0.7"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.0.2"
    }
}

repositories {
    mavenLocal()
    maven { url 'https://mvn.sony-europe.com/content/groups/global' }
    mavenCentral()
    maven { url "https://mvn.sony-europe.com/content/groups/global" }
    maven { url "http://oss.jfrog.org/repo" }
    maven { url "http://repo.springsource.org/repo" }
    maven { url "http://repo.spring.io/libs-release" }
}

//======================================================================
// PLUGINS
//======================================================================

apply plugin: "ratpack-groovy"
apply plugin: "groovy"
apply plugin: 'idea'
apply plugin: 'nexus'
apply plugin: "com.github.johnrengelman.shadow"

//======================================================================
// CONFIGURATIONS
//======================================================================

configurations {
    all {
        exclude module: "groovy"
    }
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

idea {
    project {
        jdkName "1.7"
        languageLevel "1.7"
    }
    module {
        inheritOutputDirs = false
        outputDir = compileGroovy.destinationDir
        testOutputDir = compileTestGroovy.destinationDir

    }
}

shadowJar {
    transform(AppendingTransformer) {
        resource = "META-INF/spring.handlers"
    }
    transform(AppendingTransformer) {
        resource = "META-INF/spring.schemas"
    }
}

run { systemProperty('storage.root', System.getProperty('storage.root') ?: System.getProperty('java.io.tmpdir')) }
run { systemProperty('environment', System.getProperty('environment')) }
test { systemProperty('environment', System.getProperty('environment')) }

//======================================================================
// DEPENDENCIES
//======================================================================

dependencies {
    compile 'com.sony.ebs.octopus3:octopus3-commons:1.0'
    compile 'com.sony.ebs.octopus3:octopus3-commons-ratpack:1.0-SNAPSHOT'
    compile 'commons-io:commons-io:2.4'

    // cucumber
    cucumberRuntime files("${jar.archivePath}")
    testCompile 'junit:junit:4.11'
    testCompile 'info.cukes:cucumber-junit:1.1.7'
    testCompile 'info.cukes:cucumber-groovy:1.1.7'

    // spring
    compile "org.springframework:spring-core:4.0.5.RELEASE"
    compile "org.springframework:spring-context:4.0.5.RELEASE"
    compile "org.springframework:spring-beans:4.0.5.RELEASE"

    // ratpack
    springloaded "org.springsource.springloaded:springloaded-core:1.1.4"
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0", {
        exclude module: "groovy-all"
    }
    compile 'io.ratpack:ratpack-rx:0.9.7-SNAPSHOT'
    compile 'io.ratpack:ratpack-jackson:0.9.7-SNAPSHOT'

    // logging
    compile group:"org.slf4j", name:"slf4j-api", version:"1.7.5"
    compile group:"org.slf4j", name:"jcl-over-slf4j", version:"1.7.5"
    compile group:"org.slf4j", name:"log4j-over-slf4j", version:"1.7.5"
    compile group:"ch.qos.logback", name:"logback-core", version:"1.1.2"
    compile group:"ch.qos.logback", name:"logback-classic", version:"1.1.2"

    // http clients
    compile 'com.ning:async-http-client:1.8.11', {
        exclude group: 'io.netty'
        exclude group: 'org.slf4j'
        exclude group: 'org.apache.httpcomponents'
    }
    testCompile 'com.github.dreamhead:moco-core:0.9.1', {
        exclude group: 'org.slf4j'
        exclude group: 'org.apache.httpcomponents'
    }
    compile 'com.netflix.rxjava:rxjava-apache-http:0.19.2', {
       exclude group: 'org.apache.httpcomponents'
    }
    compile 'org.apache.httpcomponents:httpasyncclient:4.0.1'
    compile 'org.apache.httpcomponents:httpmime:4.3.4'
    compile 'org.apache.httpcomponents:httpcore:4.3.2'
    compile 'org.apache.httpcomponents:httpclient:4.3.4'

}

//======================================================================
// TASKS
//======================================================================

task cucumber(type: JavaExec) {
    dependsOn assemble
    main = "cucumber.api.cli.Main"
    classpath = files(configurations.cucumberRuntime, sourceSets.test.runtimeClasspath)
    args = ['-f', 'pretty', '--glue', 'src/test/groovy', 'src/test/resources/cukes']
    systemProperty('storage.root', System.getProperty('storage.root') ?: System.getProperty('java.io.tmpdir'))
}

task wrapper(type: Wrapper) {
    gradleVersion = 2.0
}

//======================================================================
// DEPLOY ARTIFACTS
//======================================================================

nexus {
    attachSources = true
    attachTests = false
    attachJavadoc = false
    sign = false
    repositoryUrl = 'https://mvn.sony-europe.com/content/repositories/releases'
    snapshotRepositoryUrl = 'https://mvn.sony-europe.com/content/repositories/snapshots'
}